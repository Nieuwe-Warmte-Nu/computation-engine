version: "3.8"

networks:
    nwn:

volumes:
  db-data:
  broker-data:

services:
    rabbitmq:
        image: rabbitmq:3.12-management
        restart: unless-stopped
        volumes:
            - "broker-data:/var/lib/rabbitmq/"
        environment:
            - RABBITMQ_DEFAULT_USER=${RABBITMQ_ROOT_USER}
            - RABBITMQ_DEFAULT_PASS=${RABBITMQ_ROOT_PASSWORD}
        hostname: rabbitmq-nwn
        ports:
            - '5672:5672'
            - '15672:15672'
        networks:
            - nwn

    postgres_db:
        image: postgres:15.4
        restart: unless-stopped
        volumes:
            - "./postgres_db/initdb.d/:/docker-entrypoint-initdb.d"
            - "db-data:/var/lib/postgresql/data/"
        ports:
            - '5432:5432'
        networks:
            - nwn
        environment:
            PGDATA: /var/lib/postgresql/data
            POSTGRES_DB: ${POSTGRES_DATABASE_NAME}
            POSTGRES_USER: ${POSTGRES_ROOT_USER}
            POSTGRES_PASSWORD: ${POSTGRES_ROOT_PASSWORD}

    optimization_worker:
        image: tnoslafleur/nwn_optimization_worker:0.0.2
        restart: unless-stopped
        deploy:
            replicas: 2
        networks:
            - nwn
        environment:
            POSTGRES_HOST: postgres_db
            POSTGRES_ROOT_USER: ${POSTGRES_ROOT_USER}
            POSTGRES_ROOT_PASSWORD: ${POSTGRES_ROOT_PASSWORD}
            POSTGRES_PORT: 5432
            POSTGRES_DATABASE_NAME: ${POSTGRES_DATABASE_NAME}
            RABBITMQ_HOST: rabbitmq-nwn
            RABBITMQ_PORT: 5672
            RABBITMQ_ROOT_USER: ${RABBITMQ_ROOT_USER}
            RABBITMQ_ROOT_PASSWORD: ${RABBITMQ_ROOT_PASSWORD}
            RABBITMQ_HIPE_COMPILE: ${RABBITMQ_HIPE_COMPILE}
            RABBITMQ_EXCHANGE: ${RABBITMQ_EXCHANGE}
        depends_on:
            - postgres_db
            - rabbitmq
