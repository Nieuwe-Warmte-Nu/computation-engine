apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: ./kompose -f docker-compose.yml convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: rabbitmq
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: rabbitmq
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: ./kompose -f docker-compose.yml convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: rabbitmq
    spec:
      containers:
        - env:
            - name: LOG_LEVEL
            - name: RABBITMQ_DEFAULT_PASS
            - name: RABBITMQ_DEFAULT_USER
          image: rabbitmq:3.12-management
          livenessProbe:
            exec:
              command:
                - rabbitmq-diagnostics -q listeners --node rabbit@rabbitmq-nwn
            failureThreshold: 10
            periodSeconds: 10
            timeoutSeconds: 5
          name: rabbitmq
          ports:
            - containerPort: 5672
              protocol: TCP
            - containerPort: 15672
              protocol: TCP
          volumeMounts:
            - mountPath: /var/lib/rabbitmq
              name: broker-data
            - mountPath: /etc/rabbitmq/rabbitmq.conf
              name: rabbitmq-cm1
              subPath: rabbitmq.conf
      hostname: rabbitmq-nwn
      restartPolicy: Always
      volumes:
        - name: broker-data
          persistentVolumeClaim:
            claimName: broker-data
        - configMap:
            items:
              - key: rabbitmq.conf
                path: rabbitmq.conf
            name: rabbitmq-cm1
          name: rabbitmq-cm1
